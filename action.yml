name: "Lets Threat Model"
description: "Generate threat models from YAML configs using the lets-threat-model-core container"
author: "Jesus C Martinez"
branding:
  icon: "shield"
  color: "blue"

inputs:
  config:
    description: "Path to your config.yaml file (must be checked out in the repo)"
    required: true
  markdown-output:
    description: "Output path for the markdown report"
    required: false
    default: "threat_model_report.md"
  json-output:
    description: "Optional output path for the JSON report"
    required: false
    default: "threat_model_report.json"
  sarif-output:
    description: "Optional output path for the SARIF report"
    required: false
    default: "threat_model_report.sarif"
  github-username:
    description: "GitHub username for authenticated operations"
    required: false
  github-pat:
    description: "GitHub Personal Access Token (keep secret!)"
    required: false
  openai-api-key:
    description: "OpenAI API Key (keep secret!)"
    required: false
  anthropic-api-key:
    description: "Anthropic API Key (keep secret!)"
    required: false
  log-level:
    description: "Log level for the process (DEBUG, INFO, etc.)"
    required: false
    default: "INFO"

runs:
  using: "composite"
  steps:
    - name: Run lets-threat-model-core container
      shell: bash
      run: |
        echo "Generating threat model from: ${{ inputs.config }}"

        WORKSPACE=${{ github.workspace }}

        # Build optional JSON argument
        EXTRA_ARGS=""
        if [ -n "${{ inputs.json-output }}" ]; then
          EXTRA_ARGS="--json-output /data/${{ inputs.json-output }}"
        fi

        # Build optional SARIF argument
        if [ -n "${{ inputs.sarif-output }}" ]; then
          EXTRA_ARGS="$EXTRA_ARGS --sarif-output /data/${{ inputs.sarif-output }}"
        fi

        # Determine LLM environment variables
        if [ -n "${{ inputs.anthropic-api-key }}" ]; then
          echo "Using Anthropic API key"
          LLM_ENV="-e ANTHROPIC_API_KEY=${{ inputs.anthropic-api-key }}"
        elif [ -n "${{ inputs.openai-api-key }}" ]; then
          echo "Using OpenAI API key"
          LLM_ENV="-e OPENAI_API_KEY=${{ inputs.openai-api-key }}"
        else
          echo "❌ No API key provided. Set either openai-api-key or anthropic-api-key."
          exit 1
        fi

        # Run the container with selected API key
        docker run --rm \
          -u $(id -u):$(id -g) \
          -v "$WORKSPACE:/data:rw" \
          -e GITHUB_USERNAME="${{ inputs.github-username }}" \
          -e GITHUB_PAT="${{ inputs.github-pat }}" \
          -e LOG_LEVEL="${{ inputs.log-level }}" \
          $LLM_ENV \
          ghcr.io/jesuscmartinez/lets-threat-model-core:latest \
          --config-file /data/${{ inputs.config }} \
          --markdown-output /data/${{ inputs.markdown-output }} $EXTRA_ARGS

        echo "✅ Threat model generation complete!"
